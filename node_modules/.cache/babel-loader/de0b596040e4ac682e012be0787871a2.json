{"ast":null,"code":"import { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router';\nimport Operatorhtml from './operator.html';\nimport store from '../../../store/store';\nimport socketIOClient from \"socket.io-client\";\n\nclass Operator extends Component {\n  constructor(props) {\n    super(props);\n\n    this.socketMaint = (op, val) => {\n      this.socket.on('patients', patients => {\n        this.setState({\n          data: patients\n        });\n      });\n    };\n\n    this.connect = val => {\n      this.socket.emit('connect-to-doctor', val.id);\n      console.log(val);\n    };\n\n    this.renderData = () => {\n      console.log(this.state.data);\n      return null;\n    };\n\n    this.state = {\n      endpoint: 'http://localhost:3002'\n    };\n    var socket = socketIOClient(this.state.endpoint, {\n      query: `operator=${this.props.authenticate ? this.props.authenticate.info.name : 'test'}`\n    });\n  }\n\n  componentDidMount() {\n    this.socket.on('patients', patients => {\n      this.setState({\n        data: patients\n      });\n    });\n  }\n\n  render() {\n    return Operatorhtml.call(this);\n  }\n\n}\n\nconst matchStateToProps = state => ({\n  authenticate: state.authenticate\n});\n\nexport default withRouter(connect(matchStateToProps)(Operator));","map":{"version":3,"sources":["/Users/adityarola/Downloads/covidclinicreact/src/modules/user/operator/operator.js"],"names":["Component","connect","withRouter","Operatorhtml","store","socketIOClient","Operator","constructor","props","socketMaint","op","val","socket","on","patients","setState","data","emit","id","console","log","renderData","state","endpoint","query","authenticate","info","name","componentDidMount","render","call","matchStateToProps"],"mappings":"AAAA,SAAQA,SAAR,QAAwB,OAAxB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,UAAR,QAAyB,cAAzB;AACA,OAAOC,YAAP,MAAyB,iBAAzB;AACA,OAAOC,KAAP,MAAkB,sBAAlB;AAEA,OAAOC,cAAP,MAA2B,kBAA3B;;AAGA,MAAMC,QAAN,SAAuBN,SAAvB,CAAiC;AAC7BO,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;;AADc,SAUlBC,WAVkB,GAUL,CAACC,EAAD,EAAIC,GAAJ,KAAU;AACnB,WAAKC,MAAL,CAAYC,EAAZ,CAAe,UAAf,EAA0BC,QAAQ,IAAI;AAAC,aAAKC,QAAL,CAAc;AAACC,UAAAA,IAAI,EAACF;AAAN,SAAd;AAA+B,OAAtE;AACH,KAZiB;;AAAA,SAclBb,OAdkB,GAcPU,GAAD,IAAQ;AAEd,WAAKC,MAAL,CAAYK,IAAZ,CAAiB,mBAAjB,EAAsCN,GAAG,CAACO,EAA1C;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYT,GAAZ;AACH,KAlBiB;;AAAA,SAoBlBU,UApBkB,GAoBN,MAAI;AACZF,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKE,KAAL,CAAWN,IAAvB;AACA,aAAO,IAAP;AACH,KAvBiB;;AAEd,SAAKM,KAAL,GAAa;AACTC,MAAAA,QAAQ,EAAC;AADA,KAAb;AAIA,QAAIX,MAAM,GAAGP,cAAc,CAAC,KAAKiB,KAAL,CAAWC,QAAZ,EAAqB;AAACC,MAAAA,KAAK,EAAG,YAAW,KAAKhB,KAAL,CAAWiB,YAAX,GAAwB,KAAKjB,KAAL,CAAWiB,YAAX,CAAwBC,IAAxB,CAA6BC,IAArD,GAA0D,MAAO;AAArF,KAArB,CAA3B;AACH;;AAkBDC,EAAAA,iBAAiB,GAAE;AACf,SAAKhB,MAAL,CAAYC,EAAZ,CAAe,UAAf,EAA0BC,QAAQ,IAAI;AAAC,WAAKC,QAAL,CAAc;AAACC,QAAAA,IAAI,EAACF;AAAN,OAAd;AAA+B,KAAtE;AACH;;AAEDe,EAAAA,MAAM,GAAE;AACJ,WAAO1B,YAAY,CAAC2B,IAAb,CAAkB,IAAlB,CAAP;AACH;;AAhC4B;;AAsCjC,MAAMC,iBAAiB,GAAGT,KAAK,KAAK;AAChCG,EAAAA,YAAY,EAAGH,KAAK,CAACG;AADW,CAAL,CAA/B;;AAIA,eAAevB,UAAU,CAACD,OAAO,CAAC8B,iBAAD,CAAP,CAA2BzB,QAA3B,CAAD,CAAzB","sourcesContent":["import {Component} from 'react'\nimport {connect} from 'react-redux'\nimport {withRouter} from 'react-router'\nimport Operatorhtml from './operator.html'\nimport store from '../../../store/store'\n\nimport socketIOClient from \"socket.io-client\";\n\n\nclass Operator extends Component {\n    constructor(props){\n        super(props)\n        this.state = {\n            endpoint:'http://localhost:3002',\n        }\n\n        var socket = socketIOClient(this.state.endpoint,{query: `operator=${this.props.authenticate?this.props.authenticate.info.name:'test'}`});\n    }\n\n\n    socketMaint =(op,val)=>{ \n        this.socket.on('patients',patients => {this.setState({data:patients})});\n    }\n\n    connect = (val) =>{\n        \n        this.socket.emit('connect-to-doctor', val.id)\n        console.log(val);\n    }\n\n    renderData= ()=>{\n        console.log(this.state.data);\n        return null;\n    }\n\n    componentDidMount(){\n        this.socket.on('patients',patients => {this.setState({data:patients})});\n    }\n\n    render(){\n        return Operatorhtml.call(this);\n    }\n\n\n}\n\n\nconst matchStateToProps = state => ({\n    authenticate : state.authenticate\n})\n\nexport default withRouter(connect(matchStateToProps)(Operator))\n"]},"metadata":{},"sourceType":"module"}