{"ast":null,"code":"import HttpHelper from '../services/HttpHelper';\nimport toastr from 'toastr';\n\nfunction authenticate(data) {\n  return {\n    type: 'AUTH',\n    payload: data\n  };\n}\n\nexport function auth(data, callback) {\n  let http = new HttpHelper();\n  return dispatch => {\n    dispatch(authenticate({\n      loading: true,\n      info: {}\n    }));\n    http.post('AUTH', data).then(res => {\n      dispatch(authenticate({\n        loading: false,\n        info: res.data\n      }));\n\n      if (callback) {\n        callback.fn.call(callback.scope, res.data);\n      }\n    }).catch(err => {\n      dispatch(authenticate({\n        loading: true,\n        info: err\n      }));\n      toastr.error(\"Error\");\n    });\n  };\n}","map":{"version":3,"sources":["/Users/adityarola/Downloads/covidclinicreact/src/actions/authenticate.js"],"names":["HttpHelper","toastr","authenticate","data","type","payload","auth","callback","http","dispatch","loading","info","post","then","res","fn","call","scope","catch","err","error"],"mappings":"AAAA,OAAOA,UAAP,MAAuB,wBAAvB;AACA,OAAOC,MAAP,MAAmB,QAAnB;;AAEA,SAASC,YAAT,CAAsBC,IAAtB,EAA2B;AACvB,SAAM;AACFC,IAAAA,IAAI,EAAC,MADH;AAEFC,IAAAA,OAAO,EAACF;AAFN,GAAN;AAIH;;AAED,OAAO,SAASG,IAAT,CAAcH,IAAd,EAAmBI,QAAnB,EAA4B;AAC/B,MAAIC,IAAI,GAAG,IAAIR,UAAJ,EAAX;AACA,SAAQS,QAAD,IAAc;AACjBA,IAAAA,QAAQ,CAACP,YAAY,CAAC;AAACQ,MAAAA,OAAO,EAAC,IAAT;AAAcC,MAAAA,IAAI,EAAC;AAAnB,KAAD,CAAb,CAAR;AACAH,IAAAA,IAAI,CAACI,IAAL,CAAU,MAAV,EAAiBT,IAAjB,EAAuBU,IAAvB,CAA4BC,GAAG,IAAG;AAC9BL,MAAAA,QAAQ,CAACP,YAAY,CAAC;AAACQ,QAAAA,OAAO,EAAC,KAAT;AAAeC,QAAAA,IAAI,EAACG,GAAG,CAACX;AAAxB,OAAD,CAAb,CAAR;;AACA,UAAGI,QAAH,EAAY;AACRA,QAAAA,QAAQ,CAACQ,EAAT,CAAYC,IAAZ,CAAiBT,QAAQ,CAACU,KAA1B,EAAgCH,GAAG,CAACX,IAApC;AACH;AACJ,KALD,EAKGe,KALH,CAKUC,GAAG,IAAG;AACZV,MAAAA,QAAQ,CAACP,YAAY,CAAC;AAACQ,QAAAA,OAAO,EAAC,IAAT;AAAcC,QAAAA,IAAI,EAACQ;AAAnB,OAAD,CAAb,CAAR;AACAlB,MAAAA,MAAM,CAACmB,KAAP,CAAa,OAAb;AACH,KARD;AASH,GAXD;AAYH","sourcesContent":["import HttpHelper from '../services/HttpHelper';\nimport toastr from 'toastr'\n\nfunction authenticate(data){\n    return{\n        type:'AUTH',\n        payload:data\n    }\n}\n\nexport function auth(data,callback){\n    let http = new HttpHelper();\n    return (dispatch) => {\n        dispatch(authenticate({loading:true,info:{}}));\n        http.post('AUTH',data).then(res =>{\n            dispatch(authenticate({loading:false,info:res.data}));\n            if(callback){\n                callback.fn.call(callback.scope,res.data);\n            }\n        }).catch( err =>{\n            dispatch(authenticate({loading:true,info:err}));\n            toastr.error(\"Error\");\n        })\n    }\n}"]},"metadata":{},"sourceType":"module"}