{"ast":null,"code":"import HttpHelper from'../services/HttpHelper';import toastr from'toastr';export function getDoc(callback){var http=new HttpHelper();return function(dispatch){//dispatch(authenticate({loading:true,info:{}}));\nhttp.get('DOC',{}).then(function(res){//dispatch(authenticate({loading:false,info:res.data}));\nif(callback){callback.fn.call(callback.scope,res.data);}}).catch(function(err){//dispatch(authenticate({loading:true,info:err}));\ntoastr.error(\"Error Connecting to the api\");});};}export function toggleStatus(id,callback){var http=new HttpHelper();return function(dispatch){//dispatch(authenticate({loading:true,info:{}}));\nhttp.put('DOC',{},{id:id}).then(function(res){//dispatch(authenticate({loading:false,info:res.data}));\nif(callback){callback.fn.call(callback.scope,res);}}).catch(function(err){//dispatch(authenticate({loading:true,info:err}));\ntoastr.error(\"Error Connecting to the api\");});};}","map":{"version":3,"sources":["/Users/adityarola/Downloads/covidclinicreact/src/actions/doctors.js"],"names":["HttpHelper","toastr","getDoc","callback","http","dispatch","get","then","res","fn","call","scope","data","catch","err","error","toggleStatus","id","put"],"mappings":"AAAA,MAAOA,CAAAA,UAAP,KAAuB,wBAAvB,CACA,MAAOC,CAAAA,MAAP,KAAmB,QAAnB,CAIA,MAAO,SAASC,CAAAA,MAAT,CAAgBC,QAAhB,CAAyB,CAC5B,GAAIC,CAAAA,IAAI,CAAG,GAAIJ,CAAAA,UAAJ,EAAX,CACA,MAAO,UAACK,QAAD,CAAc,CACjB;AACAD,IAAI,CAACE,GAAL,CAAS,KAAT,CAAe,EAAf,EAAmBC,IAAnB,CAAwB,SAAAC,GAAG,CAAG,CAC1B;AACA,GAAGL,QAAH,CAAY,CACRA,QAAQ,CAACM,EAAT,CAAYC,IAAZ,CAAiBP,QAAQ,CAACQ,KAA1B,CAAgCH,GAAG,CAACI,IAApC,EACH,CACJ,CALD,EAKGC,KALH,CAKU,SAAAC,GAAG,CAAG,CACZ;AACAb,MAAM,CAACc,KAAP,CAAa,6BAAb,EACH,CARD,EASH,CAXD,CAYH,CAED,MAAO,SAASC,CAAAA,YAAT,CAAsBC,EAAtB,CAAyBd,QAAzB,CAAkC,CACrC,GAAIC,CAAAA,IAAI,CAAG,GAAIJ,CAAAA,UAAJ,EAAX,CACA,MAAO,UAACK,QAAD,CAAc,CACjB;AACAD,IAAI,CAACc,GAAL,CAAS,KAAT,CAAe,EAAf,CAAkB,CAACD,EAAE,CAACA,EAAJ,CAAlB,EAA2BV,IAA3B,CAAgC,SAAAC,GAAG,CAAG,CAClC;AACA,GAAGL,QAAH,CAAY,CACRA,QAAQ,CAACM,EAAT,CAAYC,IAAZ,CAAiBP,QAAQ,CAACQ,KAA1B,CAAgCH,GAAhC,EACH,CACJ,CALD,EAKGK,KALH,CAKU,SAAAC,GAAG,CAAG,CACZ;AACAb,MAAM,CAACc,KAAP,CAAa,6BAAb,EACH,CARD,EASH,CAXD,CAYH","sourcesContent":["import HttpHelper from '../services/HttpHelper';\nimport toastr from 'toastr'\n\n\n\nexport function getDoc(callback){\n    let http = new HttpHelper();\n    return (dispatch) => {\n        //dispatch(authenticate({loading:true,info:{}}));\n        http.get('DOC',{}).then(res =>{\n            //dispatch(authenticate({loading:false,info:res.data}));\n            if(callback){\n                callback.fn.call(callback.scope,res.data);\n            }\n        }).catch( err =>{\n            //dispatch(authenticate({loading:true,info:err}));\n            toastr.error(\"Error Connecting to the api\");\n        })\n    }\n}\n\nexport function toggleStatus(id,callback){\n    let http = new HttpHelper();\n    return (dispatch) => {\n        //dispatch(authenticate({loading:true,info:{}}));\n        http.put('DOC',{},{id:id}).then(res =>{\n            //dispatch(authenticate({loading:false,info:res.data}));\n            if(callback){\n                callback.fn.call(callback.scope,res);\n            }\n        }).catch( err =>{\n            //dispatch(authenticate({loading:true,info:err}));\n            toastr.error(\"Error Connecting to the api\");\n        })\n    }\n}"]},"metadata":{},"sourceType":"module"}