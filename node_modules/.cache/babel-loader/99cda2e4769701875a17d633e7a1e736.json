{"ast":null,"code":"import { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router';\nimport RegisterHtml from './register.html';\nimport store from '../../../store/store';\nimport toastr from 'toastr';\nimport { auth } from '../../../actions/authenticate';\n\nclass Register extends Component {\n  constructor(props) {\n    super(props);\n\n    this.afterRegister = data => {\n      console.log(data);\n    };\n\n    this.registerUser = e => {\n      e.preventDefault();\n\n      if (this.state.username === '' || this.state.password === '' || this.state.firstName === '' || this.state.lastName === '' || this.state.email === '') {\n        toastr.error(\"Please enter the required details\");\n      } else if (this.state.username.trim() === '' || this.state.password.trim() === '' || this.state.firstName.trim() === '' || this.state.lastName.trim() === '' || this.state.email.trim() === '') {\n        toastr.error(\"Please enter the required details\");\n      }\n\n      store.dispatch(register(this.state, {\n        fn: this.afterRegister,\n        scope: this\n      }));\n    };\n\n    this.state = {\n      firstName: '',\n      lastName: '',\n      email: '',\n      username: '',\n      password: ''\n    };\n  }\n\n  render() {\n    return RegisterHtml.call(this);\n  }\n\n}\n\nconst matchStateToProps = state => ({\n  authenticate: state.authenticate\n});\n\nexport default withRouter(connect(matchStateToProps)(Register));","map":{"version":3,"sources":["/Users/adityarola/Downloads/covidclinicreact/src/modules/user/register/register.js"],"names":["Component","connect","withRouter","RegisterHtml","store","toastr","auth","Register","constructor","props","afterRegister","data","console","log","registerUser","e","preventDefault","state","username","password","firstName","lastName","email","error","trim","dispatch","register","fn","scope","render","call","matchStateToProps","authenticate"],"mappings":"AAAA,SAAQA,SAAR,QAAwB,OAAxB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,UAAR,QAAyB,cAAzB;AACA,OAAOC,YAAP,MAAyB,iBAAzB;AACA,OAAOC,KAAP,MAAkB,sBAAlB;AACA,OAAOC,MAAP,MAAmB,QAAnB;AAEA,SAAQC,IAAR,QAAmB,+BAAnB;;AAGA,MAAMC,QAAN,SAAuBP,SAAvB,CAAiC;AAC7BQ,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;;AADc,SAWlBC,aAXkB,GAWDC,IAAD,IAAS;AACrBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AAEH,KAdiB;;AAAA,SAgBlBG,YAhBkB,GAgBFC,CAAD,IAAK;AAChBA,MAAAA,CAAC,CAACC,cAAF;;AACA,UAAG,KAAKC,KAAL,CAAWC,QAAX,KAAwB,EAAxB,IAA8B,KAAKD,KAAL,CAAWE,QAAX,KAAwB,EAAtD,IAA4D,KAAKF,KAAL,CAAWG,SAAX,KAAyB,EAArF,IAA2F,KAAKH,KAAL,CAAWI,QAAX,KAAwB,EAAnH,IAAwH,KAAKJ,KAAL,CAAWK,KAAX,KAAqB,EAAhJ,EAAoJ;AAChJjB,QAAAA,MAAM,CAACkB,KAAP,CAAa,mCAAb;AACH,OAFD,MAEM,IAAG,KAAKN,KAAL,CAAWC,QAAX,CAAoBM,IAApB,OAA+B,EAA/B,IAAqC,KAAKP,KAAL,CAAWE,QAAX,CAAoBK,IAApB,OAA+B,EAApE,IAAyE,KAAKP,KAAL,CAAWG,SAAX,CAAqBI,IAArB,OAAgC,EAAzG,IAA6G,KAAKP,KAAL,CAAWI,QAAX,CAAoBG,IAApB,OAA+B,EAA5I,IAAgJ,KAAKP,KAAL,CAAWK,KAAX,CAAiBE,IAAjB,OAA4B,EAA/K,EAAkL;AACpLnB,QAAAA,MAAM,CAACkB,KAAP,CAAa,mCAAb;AACH;;AAEDnB,MAAAA,KAAK,CAACqB,QAAN,CAAiBC,QAAQ,CAAC,KAAKT,KAAN,EAAY;AAACU,QAAAA,EAAE,EAAC,KAAKjB,aAAT;AAAuBkB,QAAAA,KAAK,EAAC;AAA7B,OAAZ,CAAzB;AAEH,KA1BiB;;AAEd,SAAKX,KAAL,GAAa;AACTG,MAAAA,SAAS,EAAC,EADD;AAETC,MAAAA,QAAQ,EAAC,EAFA;AAGTC,MAAAA,KAAK,EAAC,EAHG;AAITJ,MAAAA,QAAQ,EAAC,EAJA;AAKTC,MAAAA,QAAQ,EAAC;AALA,KAAb;AAOH;;AAoBDU,EAAAA,MAAM,GAAE;AACJ,WAAO1B,YAAY,CAAC2B,IAAb,CAAkB,IAAlB,CAAP;AACH;;AAhC4B;;AAkCjC,MAAMC,iBAAiB,GAAGd,KAAK,KAAK;AAChCe,EAAAA,YAAY,EAAGf,KAAK,CAACe;AADW,CAAL,CAA/B;;AAIA,eAAe9B,UAAU,CAACD,OAAO,CAAC8B,iBAAD,CAAP,CAA2BxB,QAA3B,CAAD,CAAzB","sourcesContent":["import {Component} from 'react'\nimport {connect} from 'react-redux'\nimport {withRouter} from 'react-router'\nimport RegisterHtml from './register.html'\nimport store from '../../../store/store'\nimport toastr from 'toastr'\n\nimport {auth} from '../../../actions/authenticate';\n\n\nclass Register extends Component {\n    constructor(props){\n        super(props)\n        this.state = {\n            firstName:'',\n            lastName:'',\n            email:'',\n            username:'',\n            password:'',\n        }\n    }\n\n    afterRegister = (data) =>{\n        console.log(data);\n        \n    }\n\n    registerUser = (e)=>{\n        e.preventDefault();\n        if(this.state.username === '' || this.state.password === '' || this.state.firstName === '' || this.state.lastName === '' ||this.state.email === '' ){\n            toastr.error(\"Please enter the required details\");\n        }else if(this.state.username.trim() === '' || this.state.password.trim() === ''|| this.state.firstName.trim() === ''||this.state.lastName.trim() === ''||this.state.email.trim() === ''){\n            toastr.error(\"Please enter the required details\");\n        }\n\n        store.dispatch(((register(this.state,{fn:this.afterRegister,scope:this}))));\n\n    }\n\n\n    render(){\n        return RegisterHtml.call(this);\n    }\n}\nconst matchStateToProps = state => ({\n    authenticate : state.authenticate\n})\n\nexport default withRouter(connect(matchStateToProps)(Register))\n"]},"metadata":{},"sourceType":"module"}