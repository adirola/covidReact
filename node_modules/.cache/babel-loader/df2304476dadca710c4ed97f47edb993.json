{"ast":null,"code":"import { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router';\nimport Patienthtml from './patient.html';\nimport store from '../../../store/store';\nimport socketIOClient from \"socket.io-client\";\nvar socket;\n\nclass Patient extends Component {\n  constructor(props) {\n    super(props);\n\n    this.getParams = () => {\n      return {};\n    };\n\n    this.scheduleAppointment = () => {\n      let params = this.getParams(this.props.authenticate.info.id);\n\n      if (!params || !params.id) {\n        return;\n      }\n\n      this.id = params.id;\n      socket = socketIOClient(this.state.endpoint, {\n        query: `patient=${params.id}`\n      });\n    };\n\n    this.disconnect = val => {\n      socket.emit('disconnect-patient', val.id);\n      console.log(val);\n    };\n\n    this.connect = val => {\n      socket.emit('connect-to-doctor', val.id);\n      console.log(val);\n    };\n\n    this.state = {\n      endpoint: 'http://localhost:3002',\n      Info: {}\n    };\n  }\n\n  render() {\n    return Patienthtml.call(this);\n  }\n\n}\n\nconst matchStateToProps = state => ({\n  authenticate: state.authenticate\n});\n\nexport default withRouter(connect(matchStateToProps)(Patient));","map":{"version":3,"sources":["/Users/adityarola/Downloads/covidclinicreact/src/modules/user/patient/patient.js"],"names":["Component","connect","withRouter","Patienthtml","store","socketIOClient","socket","Patient","constructor","props","getParams","scheduleAppointment","params","authenticate","info","id","state","endpoint","query","disconnect","val","emit","console","log","Info","render","call","matchStateToProps"],"mappings":"AAAA,SAAQA,SAAR,QAAwB,OAAxB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,UAAR,QAAyB,cAAzB;AACA,OAAOC,WAAP,MAAwB,gBAAxB;AACA,OAAOC,KAAP,MAAkB,sBAAlB;AAEA,OAAOC,cAAP,MAA2B,kBAA3B;AAEA,IAAIC,MAAJ;;AACA,MAAMC,OAAN,SAAsBP,SAAtB,CAAgC;AAC5BQ,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;;AADc,SAQlBC,SARkB,GAQN,MAAK;AACb,aAAO,EAAP;AACH,KAViB;;AAAA,SAYlBC,mBAZkB,GAYI,MAAK;AACvB,UAAIC,MAAM,GAAG,KAAKF,SAAL,CAAe,KAAKD,KAAL,CAAWI,YAAX,CAAwBC,IAAxB,CAA6BC,EAA5C,CAAb;;AACA,UAAI,CAACH,MAAD,IAAW,CAACA,MAAM,CAACG,EAAvB,EAA2B;AACvB;AACH;;AACD,WAAKA,EAAL,GAAUH,MAAM,CAACG,EAAjB;AACAT,MAAAA,MAAM,GAAGD,cAAc,CAAC,KAAKW,KAAL,CAAWC,QAAZ,EAAqB;AAACC,QAAAA,KAAK,EAAG,WAAUN,MAAM,CAACG,EAAG;AAA7B,OAArB,CAAvB;AAEH,KApBiB;;AAAA,SAuBlBI,UAvBkB,GAuBJC,GAAD,IAAQ;AACjBd,MAAAA,MAAM,CAACe,IAAP,CAAY,oBAAZ,EAAkCD,GAAG,CAACL,EAAtC;AACAO,MAAAA,OAAO,CAACC,GAAR,CAAYH,GAAZ;AACH,KA1BiB;;AAAA,SA4BlBnB,OA5BkB,GA4BPmB,GAAD,IAAQ;AACdd,MAAAA,MAAM,CAACe,IAAP,CAAY,mBAAZ,EAAiCD,GAAG,CAACL,EAArC;AACAO,MAAAA,OAAO,CAACC,GAAR,CAAYH,GAAZ;AACH,KA/BiB;;AAEd,SAAKJ,KAAL,GAAa;AACTC,MAAAA,QAAQ,EAAC,uBADA;AAETO,MAAAA,IAAI,EAAG;AAFE,KAAb;AAIH;;AA4BDC,EAAAA,MAAM,GAAE;AACJ,WAAOtB,WAAW,CAACuB,IAAZ,CAAiB,IAAjB,CAAP;AACH;;AArC2B;;AA2ChC,MAAMC,iBAAiB,GAAGX,KAAK,KAAK;AAChCH,EAAAA,YAAY,EAAGG,KAAK,CAACH;AADW,CAAL,CAA/B;;AAIA,eAAeX,UAAU,CAACD,OAAO,CAAC0B,iBAAD,CAAP,CAA2BpB,OAA3B,CAAD,CAAzB","sourcesContent":["import {Component} from 'react'\nimport {connect} from 'react-redux'\nimport {withRouter} from 'react-router'\nimport Patienthtml from './patient.html'\nimport store from '../../../store/store'\n\nimport socketIOClient from \"socket.io-client\";\n\nvar socket;\nclass Patient extends Component {\n    constructor(props){\n        super(props)\n        this.state = {\n            endpoint:'http://localhost:3002',\n            Info : {}\n        }\n    }\n\n    getParams = () =>{\n        return {}\n    }\n\n    scheduleAppointment = () =>{\n        let params = this.getParams(this.props.authenticate.info.id);\n        if (!params || !params.id) {\n            return;\n        }\n        this.id = params.id;\n        socket = socketIOClient(this.state.endpoint,{query: `patient=${params.id}`});\n        \n    }\n    \n\n    disconnect = (val) =>{\n        socket.emit('disconnect-patient', val.id)\n        console.log(val);\n    }\n\n    connect = (val) =>{\n        socket.emit('connect-to-doctor', val.id)\n        console.log(val);\n    }\n\n\n    render(){\n        return Patienthtml.call(this);\n    }\n\n\n}\n\n\nconst matchStateToProps = state => ({\n    authenticate : state.authenticate\n})\n\nexport default withRouter(connect(matchStateToProps)(Patient))\n"]},"metadata":{},"sourceType":"module"}