{"ast":null,"code":"import HttpHelper from '../services/HttpHelper';\nimport toastr from 'toastr';\nexport function getDoc(callback) {\n  let http = new HttpHelper();\n  return dispatch => {\n    //dispatch(authenticate({loading:true,info:{}}));\n    http.get('DOC', {}).then(res => {\n      //dispatch(authenticate({loading:false,info:res.data}));\n      if (callback) {\n        callback.fn.call(callback.scope, res.data);\n      }\n    }).catch(err => {\n      //dispatch(authenticate({loading:true,info:err}));\n      toastr.error(\"Error Connecting to the api\");\n    });\n  };\n}\nexport function toggleStatus(id, callback) {\n  let http = new HttpHelper();\n  return dispatch => {\n    //dispatch(authenticate({loading:true,info:{}}));\n    http.put('DOC', {}, {\n      id: id\n    }).then(res => {\n      //dispatch(authenticate({loading:false,info:res.data}));\n      if (callback) {\n        callback.fn.call(callback.scope, res);\n      }\n    }).catch(err => {\n      //dispatch(authenticate({loading:true,info:err}));\n      toastr.error(\"Error Connecting to the api\");\n    });\n  };\n}","map":{"version":3,"sources":["/Users/adityarola/Downloads/covidclinicreact/src/actions/doctors.js"],"names":["HttpHelper","toastr","getDoc","callback","http","dispatch","get","then","res","fn","call","scope","data","catch","err","error","toggleStatus","id","put"],"mappings":"AAAA,OAAOA,UAAP,MAAuB,wBAAvB;AACA,OAAOC,MAAP,MAAmB,QAAnB;AAIA,OAAO,SAASC,MAAT,CAAgBC,QAAhB,EAAyB;AAC5B,MAAIC,IAAI,GAAG,IAAIJ,UAAJ,EAAX;AACA,SAAQK,QAAD,IAAc;AACjB;AACAD,IAAAA,IAAI,CAACE,GAAL,CAAS,KAAT,EAAe,EAAf,EAAmBC,IAAnB,CAAwBC,GAAG,IAAG;AAC1B;AACA,UAAGL,QAAH,EAAY;AACRA,QAAAA,QAAQ,CAACM,EAAT,CAAYC,IAAZ,CAAiBP,QAAQ,CAACQ,KAA1B,EAAgCH,GAAG,CAACI,IAApC;AACH;AACJ,KALD,EAKGC,KALH,CAKUC,GAAG,IAAG;AACZ;AACAb,MAAAA,MAAM,CAACc,KAAP,CAAa,6BAAb;AACH,KARD;AASH,GAXD;AAYH;AAED,OAAO,SAASC,YAAT,CAAsBC,EAAtB,EAAyBd,QAAzB,EAAkC;AACrC,MAAIC,IAAI,GAAG,IAAIJ,UAAJ,EAAX;AACA,SAAQK,QAAD,IAAc;AACjB;AACAD,IAAAA,IAAI,CAACc,GAAL,CAAS,KAAT,EAAe,EAAf,EAAkB;AAACD,MAAAA,EAAE,EAACA;AAAJ,KAAlB,EAA2BV,IAA3B,CAAgCC,GAAG,IAAG;AAClC;AACA,UAAGL,QAAH,EAAY;AACRA,QAAAA,QAAQ,CAACM,EAAT,CAAYC,IAAZ,CAAiBP,QAAQ,CAACQ,KAA1B,EAAgCH,GAAhC;AACH;AACJ,KALD,EAKGK,KALH,CAKUC,GAAG,IAAG;AACZ;AACAb,MAAAA,MAAM,CAACc,KAAP,CAAa,6BAAb;AACH,KARD;AASH,GAXD;AAYH","sourcesContent":["import HttpHelper from '../services/HttpHelper';\nimport toastr from 'toastr'\n\n\n\nexport function getDoc(callback){\n    let http = new HttpHelper();\n    return (dispatch) => {\n        //dispatch(authenticate({loading:true,info:{}}));\n        http.get('DOC',{}).then(res =>{\n            //dispatch(authenticate({loading:false,info:res.data}));\n            if(callback){\n                callback.fn.call(callback.scope,res.data);\n            }\n        }).catch( err =>{\n            //dispatch(authenticate({loading:true,info:err}));\n            toastr.error(\"Error Connecting to the api\");\n        })\n    }\n}\n\nexport function toggleStatus(id,callback){\n    let http = new HttpHelper();\n    return (dispatch) => {\n        //dispatch(authenticate({loading:true,info:{}}));\n        http.put('DOC',{},{id:id}).then(res =>{\n            //dispatch(authenticate({loading:false,info:res.data}));\n            if(callback){\n                callback.fn.call(callback.scope,res);\n            }\n        }).catch( err =>{\n            //dispatch(authenticate({loading:true,info:err}));\n            toastr.error(\"Error Connecting to the api\");\n        })\n    }\n}"]},"metadata":{},"sourceType":"module"}