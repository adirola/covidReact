{"ast":null,"code":"import HttpHelper from'../services/HttpHelper';import toastr from'toastr';function authenticate(data){return{type:'AUTH',payload:data};}export function auth(data,callback){var http=new HttpHelper();return function(dispatch){dispatch(authenticate({loading:true,info:{}}));http.post('AUTH',data).then(function(res){dispatch(authenticate({loading:false,info:res.data}));if(callback){callback.fn.call(callback.scope,res.data);}}).catch(function(err){dispatch(authenticate({loading:true,info:err}));toastr.error(\"Error\");});};}","map":{"version":3,"sources":["/Users/adityarola/Downloads/covidclinicreact/src/actions/authenticate.js"],"names":["HttpHelper","toastr","authenticate","data","type","payload","auth","callback","http","dispatch","loading","info","post","then","res","fn","call","scope","catch","err","error"],"mappings":"AAAA,MAAOA,CAAAA,UAAP,KAAuB,wBAAvB,CACA,MAAOC,CAAAA,MAAP,KAAmB,QAAnB,CAEA,QAASC,CAAAA,YAAT,CAAsBC,IAAtB,CAA2B,CACvB,MAAM,CACFC,IAAI,CAAC,MADH,CAEFC,OAAO,CAACF,IAFN,CAAN,CAIH,CAED,MAAO,SAASG,CAAAA,IAAT,CAAcH,IAAd,CAAmBI,QAAnB,CAA4B,CAC/B,GAAIC,CAAAA,IAAI,CAAG,GAAIR,CAAAA,UAAJ,EAAX,CACA,MAAO,UAACS,QAAD,CAAc,CACjBA,QAAQ,CAACP,YAAY,CAAC,CAACQ,OAAO,CAAC,IAAT,CAAcC,IAAI,CAAC,EAAnB,CAAD,CAAb,CAAR,CACAH,IAAI,CAACI,IAAL,CAAU,MAAV,CAAiBT,IAAjB,EAAuBU,IAAvB,CAA4B,SAAAC,GAAG,CAAG,CAC9BL,QAAQ,CAACP,YAAY,CAAC,CAACQ,OAAO,CAAC,KAAT,CAAeC,IAAI,CAACG,GAAG,CAACX,IAAxB,CAAD,CAAb,CAAR,CACA,GAAGI,QAAH,CAAY,CACRA,QAAQ,CAACQ,EAAT,CAAYC,IAAZ,CAAiBT,QAAQ,CAACU,KAA1B,CAAgCH,GAAG,CAACX,IAApC,EACH,CACJ,CALD,EAKGe,KALH,CAKU,SAAAC,GAAG,CAAG,CACZV,QAAQ,CAACP,YAAY,CAAC,CAACQ,OAAO,CAAC,IAAT,CAAcC,IAAI,CAACQ,GAAnB,CAAD,CAAb,CAAR,CACAlB,MAAM,CAACmB,KAAP,CAAa,OAAb,EACH,CARD,EASH,CAXD,CAYH","sourcesContent":["import HttpHelper from '../services/HttpHelper';\nimport toastr from 'toastr'\n\nfunction authenticate(data){\n    return{\n        type:'AUTH',\n        payload:data\n    }\n}\n\nexport function auth(data,callback){\n    let http = new HttpHelper();\n    return (dispatch) => {\n        dispatch(authenticate({loading:true,info:{}}));\n        http.post('AUTH',data).then(res =>{\n            dispatch(authenticate({loading:false,info:res.data}));\n            if(callback){\n                callback.fn.call(callback.scope,res.data);\n            }\n        }).catch( err =>{\n            dispatch(authenticate({loading:true,info:err}));\n            toastr.error(\"Error\");\n        })\n    }\n}"]},"metadata":{},"sourceType":"module"}