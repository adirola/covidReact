{"ast":null,"code":"import { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router';\nimport Operatorhtml from './operator.html';\nimport store from '../../../store/store';\nimport socketIOClient from \"socket.io-client\";\nvar socket;\n\nclass Operator extends Component {\n  constructor(props) {\n    super(props);\n\n    this.disconnect = val => {\n      socket.emit('disconnect-patient', val.id);\n      console.log(val);\n    };\n\n    this.connect = val => {\n      socket.emit('connect-to-doctor', val.id);\n      console.log(val);\n    };\n\n    this.renderData = () => {\n      console.log(this.state.data);\n      return null;\n    };\n\n    this.state = {\n      endpoint: 'http://52.172.204.88:3002'\n    };\n  }\n\n  componentDidMount() {\n    socket = socketIOClient(this.state.endpoint, {\n      query: `operator=${this.props.authenticate ? this.props.authenticate.info.name : 'test'}`\n    });\n    socket.on('patients', patients => {\n      this.setState({\n        data: patients\n      });\n    });\n  }\n\n  render() {\n    return Operatorhtml.call(this);\n  }\n\n}\n\nconst matchStateToProps = state => ({\n  authenticate: state.authenticate\n});\n\nexport default withRouter(connect(matchStateToProps)(Operator));","map":{"version":3,"sources":["/Users/adityarola/Downloads/covidclinicreact/src/modules/user/operator/operator.js"],"names":["Component","connect","withRouter","Operatorhtml","store","socketIOClient","socket","Operator","constructor","props","disconnect","val","emit","id","console","log","renderData","state","data","endpoint","componentDidMount","query","authenticate","info","name","on","patients","setState","render","call","matchStateToProps"],"mappings":"AAAA,SAAQA,SAAR,QAAwB,OAAxB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,UAAR,QAAyB,cAAzB;AACA,OAAOC,YAAP,MAAyB,iBAAzB;AACA,OAAOC,KAAP,MAAkB,sBAAlB;AAEA,OAAOC,cAAP,MAA2B,kBAA3B;AAEA,IAAIC,MAAJ;;AACA,MAAMC,QAAN,SAAuBP,SAAvB,CAAiC;AAC7BQ,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;;AADc,SASlBC,UATkB,GASJC,GAAD,IAAQ;AACjBL,MAAAA,MAAM,CAACM,IAAP,CAAY,oBAAZ,EAAkCD,GAAG,CAACE,EAAtC;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYJ,GAAZ;AACH,KAZiB;;AAAA,SAclBV,OAdkB,GAcPU,GAAD,IAAQ;AACdL,MAAAA,MAAM,CAACM,IAAP,CAAY,mBAAZ,EAAiCD,GAAG,CAACE,EAArC;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYJ,GAAZ;AACH,KAjBiB;;AAAA,SAmBlBK,UAnBkB,GAmBN,MAAI;AACZF,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKE,KAAL,CAAWC,IAAvB;AACA,aAAO,IAAP;AACH,KAtBiB;;AAEd,SAAKD,KAAL,GAAa;AACTE,MAAAA,QAAQ,EAAC;AADA,KAAb;AAKH;;AAiBDC,EAAAA,iBAAiB,GAAE;AACfd,IAAAA,MAAM,GAAGD,cAAc,CAAC,KAAKY,KAAL,CAAWE,QAAZ,EAAqB;AAACE,MAAAA,KAAK,EAAG,YAAW,KAAKZ,KAAL,CAAWa,YAAX,GAAwB,KAAKb,KAAL,CAAWa,YAAX,CAAwBC,IAAxB,CAA6BC,IAArD,GAA0D,MAAO;AAArF,KAArB,CAAvB;AACAlB,IAAAA,MAAM,CAACmB,EAAP,CAAU,UAAV,EAAqBC,QAAQ,IAAI;AAAC,WAAKC,QAAL,CAAc;AAACT,QAAAA,IAAI,EAACQ;AAAN,OAAd;AAA+B,KAAjE;AACH;;AAEDE,EAAAA,MAAM,GAAE;AACJ,WAAOzB,YAAY,CAAC0B,IAAb,CAAkB,IAAlB,CAAP;AACH;;AAhC4B;;AAsCjC,MAAMC,iBAAiB,GAAGb,KAAK,KAAK;AAChCK,EAAAA,YAAY,EAAGL,KAAK,CAACK;AADW,CAAL,CAA/B;;AAIA,eAAepB,UAAU,CAACD,OAAO,CAAC6B,iBAAD,CAAP,CAA2BvB,QAA3B,CAAD,CAAzB","sourcesContent":["import {Component} from 'react'\nimport {connect} from 'react-redux'\nimport {withRouter} from 'react-router'\nimport Operatorhtml from './operator.html'\nimport store from '../../../store/store'\n\nimport socketIOClient from \"socket.io-client\";\n\nvar socket;\nclass Operator extends Component {\n    constructor(props){\n        super(props)\n        this.state = {\n            endpoint:'http://52.172.204.88:3002',\n        }\n\n         \n    }\n\n    disconnect = (val) =>{\n        socket.emit('disconnect-patient', val.id)\n        console.log(val);\n    }\n\n    connect = (val) =>{\n        socket.emit('connect-to-doctor', val.id)\n        console.log(val);\n    }\n\n    renderData= ()=>{\n        console.log(this.state.data);\n        return null;\n    }\n\n    componentDidMount(){\n        socket = socketIOClient(this.state.endpoint,{query: `operator=${this.props.authenticate?this.props.authenticate.info.name:'test'}`});\n        socket.on('patients',patients => {this.setState({data:patients})});\n    }\n\n    render(){\n        return Operatorhtml.call(this);\n    }\n\n\n}\n\n\nconst matchStateToProps = state => ({\n    authenticate : state.authenticate\n})\n\nexport default withRouter(connect(matchStateToProps)(Operator))\n"]},"metadata":{},"sourceType":"module"}