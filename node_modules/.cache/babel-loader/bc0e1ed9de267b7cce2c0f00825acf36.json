{"ast":null,"code":"import HttpHelper from '../services/HttpHelper';\nimport toastr from 'toastr';\n\nfunction authenticate(data) {\n  return {\n    type: 'AUTH',\n    payload: data\n  };\n}\n\nexport function auth(data, callback) {\n  let http = new HttpHelper();\n  return dispatch => {\n    //dispatch(authenticate({loading:true,info:{}}));\n    http.post('AUTH', data).then(res => {\n      //dispatch(authenticate({loading:false,info:res.data}));\n      if (callback) {\n        callback.fn.call(callback.scope, res.data);\n      }\n    }).catch(err => {\n      //dispatch(authenticate({loading:true,info:err}));\n      console.log(err);\n      toastr.error(\"Error Connecting to the api\");\n    });\n  };\n}","map":{"version":3,"sources":["/Users/adityarola/Downloads/covidclinicreact/src/actions/authenticate.js"],"names":["HttpHelper","toastr","authenticate","data","type","payload","auth","callback","http","dispatch","post","then","res","fn","call","scope","catch","err","console","log","error"],"mappings":"AAAA,OAAOA,UAAP,MAAuB,wBAAvB;AACA,OAAOC,MAAP,MAAmB,QAAnB;;AAEA,SAASC,YAAT,CAAsBC,IAAtB,EAA2B;AACvB,SAAM;AACFC,IAAAA,IAAI,EAAC,MADH;AAEFC,IAAAA,OAAO,EAACF;AAFN,GAAN;AAIH;;AAED,OAAO,SAASG,IAAT,CAAcH,IAAd,EAAmBI,QAAnB,EAA4B;AAC/B,MAAIC,IAAI,GAAG,IAAIR,UAAJ,EAAX;AACA,SAAQS,QAAD,IAAc;AACjB;AACAD,IAAAA,IAAI,CAACE,IAAL,CAAU,MAAV,EAAiBP,IAAjB,EAAuBQ,IAAvB,CAA4BC,GAAG,IAAG;AAC9B;AACA,UAAGL,QAAH,EAAY;AACRA,QAAAA,QAAQ,CAACM,EAAT,CAAYC,IAAZ,CAAiBP,QAAQ,CAACQ,KAA1B,EAAgCH,GAAG,CAACT,IAApC;AACH;AACJ,KALD,EAKGa,KALH,CAKUC,GAAG,IAAG;AACZ;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACAhB,MAAAA,MAAM,CAACmB,KAAP,CAAa,6BAAb;AACH,KATD;AAUH,GAZD;AAaH","sourcesContent":["import HttpHelper from '../services/HttpHelper';\nimport toastr from 'toastr'\n\nfunction authenticate(data){\n    return{\n        type:'AUTH',\n        payload:data\n    }\n}\n\nexport function auth(data,callback){\n    let http = new HttpHelper();\n    return (dispatch) => {\n        //dispatch(authenticate({loading:true,info:{}}));\n        http.post('AUTH',data).then(res =>{\n            //dispatch(authenticate({loading:false,info:res.data}));\n            if(callback){\n                callback.fn.call(callback.scope,res.data);\n            }\n        }).catch( err =>{\n            //dispatch(authenticate({loading:true,info:err}));\n            console.log(err);\n            toastr.error(\"Error Connecting to the api\");\n        })\n    }\n}"]},"metadata":{},"sourceType":"module"}