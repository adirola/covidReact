{"ast":null,"code":"import _slicedToArray from\"/Users/adityarola/Downloads/covidclinicreact/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _classCallCheck from\"/Users/adityarola/Downloads/covidclinicreact/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/adityarola/Downloads/covidclinicreact/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _createSuper from\"/Users/adityarola/Downloads/covidclinicreact/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import _inherits from\"/Users/adityarola/Downloads/covidclinicreact/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import{Component}from'react';import{connect}from'react-redux';import{withRouter}from'react-router';import Patienthtml from'./patient.html';import store from'../../../store/store';import toastr from'toastr';import{Env}from'../../../api.config';import socketIOClient from\"socket.io-client\";var socket;var Patient=/*#__PURE__*/function(_Component){_inherits(Patient,_Component);var _super=_createSuper(Patient);function Patient(props){var _this;_classCallCheck(this,Patient);_this=_super.call(this,props);_this.getParams=function(query){if(!query){return{};}return(/^[?#]/.test(query)?query.slice(1):query).split('&').reduce(function(params,param){var _param$split=param.split('='),_param$split2=_slicedToArray(_param$split,2),key=_param$split2[0],value=_param$split2[1];params[key]=value?decodeURIComponent(value.replace(/\\+/g,' ')):'';return params;},{});};_this.openAppointment=function(){if(_this.state.iframeUrl===''){toastr.error(\"No url available\");}else{window.open(_this.state.iframeUrl,'_blank');}};_this.scheduleAppointment=function(){var params=_this.getParams('?id='+_this.props.authenticate.info.data.id);var i=0;if(!params||!params.id){return;}_this.id=params.id;try{socket=socketIOClient(_this.state.endpoint,{query:\"patient=\".concat(params.id)});toastr.success(\"Request Sent Successfully\");}catch(err){toastr.error(\"Request Unsuccessfull\");}socket.on('update',function(data){console.log(typeof data);if(typeof data==='string'){if(data.toLowerCase()==='doctors not free')toastr.error(\"No Doctor available\");}else{while(i<1){toastr.success(\"Appointment Scheduled\");++i;}_this.setState({info:data});}});socket.on('connect',function(_){console.log(\"Connected.\");});socket.on('redirect',function(data){_this.setState({iframeUrl:data.url});});socket.on('disconnect',function(){console.log('you have been disconnected');});socket.on('reconnect',function(){console.log('you have been reconnected');});socket.on('reconnect_error',function(){console.log('attempt to reconnect has failed');});};_this.state={endpoint:Env.getSocketUrl(),info:{},iframeUrl:''};return _this;}_createClass(Patient,[{key:\"render\",value:function render(){return Patienthtml.call(this);}}]);return Patient;}(Component);var matchStateToProps=function matchStateToProps(state){return{authenticate:state.authenticate};};export default withRouter(connect(matchStateToProps)(Patient));","map":{"version":3,"sources":["/Users/adityarola/Downloads/covidclinicreact/src/modules/user/patient/patient.js"],"names":["Component","connect","withRouter","Patienthtml","store","toastr","Env","socketIOClient","socket","Patient","props","getParams","query","test","slice","split","reduce","params","param","key","value","decodeURIComponent","replace","openAppointment","state","iframeUrl","error","window","open","scheduleAppointment","authenticate","info","data","id","i","endpoint","success","err","on","console","log","toLowerCase","setState","_","url","getSocketUrl","call","matchStateToProps"],"mappings":"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","sourcesContent":["import {Component} from 'react'\nimport {connect} from 'react-redux'\nimport {withRouter} from 'react-router'\nimport Patienthtml from './patient.html'\nimport store from '../../../store/store'\nimport toastr from 'toastr';\nimport { Env } from '../../../api.config';\n\nimport socketIOClient from \"socket.io-client\";\n\nvar socket;\nclass Patient extends Component {\n    constructor(props){\n        super(props)\n        this.state = {\n            endpoint:Env.getSocketUrl(),\n            info : {},\n            iframeUrl:''\n        }\n    }\n\n    getParams = (query) =>{\n        if (!query) {\n            return { };\n        }\n    \n        return (/^[?#]/.test(query) ? query.slice(1) : query)\n        .split('&')\n        .reduce((params, param) => {\n            let [ key, value ] = param.split('=');\n            params[key] = value ? decodeURIComponent(value.replace(/\\+/g, ' ')) : '';\n            return params;\n        }, { });\n    }\n\n    openAppointment= () =>{\n        if(this.state.iframeUrl === ''){\n            toastr.error(\"No url available\")\n        }else{\n            window.open(this.state.iframeUrl,'_blank');\n        }\n    }\n\n    scheduleAppointment = () =>{\n        let params = this.getParams('?id='+this.props.authenticate.info.data.id);\n        var i = 0\n        if (!params || !params.id) {\n            return;\n        }\n        this.id = params.id;\n        try{\n            socket = socketIOClient(this.state.endpoint,{query: `patient=${params.id}`});\n            toastr.success(\"Request Sent Successfully\")\n        }catch(err){\n            toastr.error(\"Request Unsuccessfull\")\n        }\n        socket.on('update', data => {\n\n            console.log(typeof data);\n            if(typeof data === 'string'){\n                if(data.toLowerCase() ==='doctors not free')\n                toastr.error(\"No Doctor available\")\n            }else{\n                while(i<1){\n                    toastr.success(\"Appointment Scheduled\")\n                    ++i\n                }\n                this.setState({info:data})\n            }\n        });\n        socket.on('connect', _ => {\n            console.log(`Connected.`);\n        });\n\n        socket.on('redirect', data => {\n            this.setState({iframeUrl:data.url});\n        });\n\n        socket.on('disconnect', function () {\n            console.log('you have been disconnected');\n        });\n\n        socket.on('reconnect', function () {\n            console.log('you have been reconnected');\n        });\n\n        socket.on('reconnect_error', function () {\n            console.log('attempt to reconnect has failed');\n        });\n        \n    }\n\n    render(){\n        return Patienthtml.call(this);\n    }\n\n\n}\n\n\nconst matchStateToProps = state => ({\n    authenticate : state.authenticate\n})\n\nexport default withRouter(connect(matchStateToProps)(Patient))\n"]},"metadata":{},"sourceType":"module"}